{
 "Resources": {
  "GeoMap5538752E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "point",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "quadId",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "point",
      "AttributeType": "S"
     },
     {
      "AttributeName": "quadId",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "GeoMaps"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/GeoMap/Resource"
   }
  },
  "dsexplorer45F728E1": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Cloud DS Explorer"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Resource"
   }
  },
  "dsexplorerCloudWatchRoleEFE7EED6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/CloudWatchRole/Resource"
   }
  },
  "dsexplorerAccount272FA25F": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "dsexplorerCloudWatchRoleEFE7EED6",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "dsexplorer45F728E1"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Account"
   }
  },
  "dsexplorerDeployment796B9293c71784ee76e4e6b294080a02c9466b57": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "dsexplorergMapssrcdestGET79121287",
    "dsexplorergMapssrcdestOPTIONSFA61D73F",
    "dsexplorergMapssrcdest73447F59",
    "dsexplorergMapssrcC50F70EF",
    "dsexplorergMapsOPTIONS1AACEF90",
    "dsexplorergMapsPOST6766FA0E",
    "dsexplorergMaps449AB82F",
    "dsexplorermedianTrackerGET3A27654A",
    "dsexplorermedianTrackerOPTIONS814DF954",
    "dsexplorermedianTrackerPOST6932612A",
    "dsexplorermedianTracker00B88DA5",
    "dsexplorersegmentTreeOPTIONSA3C3E887",
    "dsexplorersegmentTreePOSTCFC39CA9",
    "dsexplorersegmentTree62E3684E"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Deployment/Resource"
   }
  },
  "dsexplorerDeploymentStageprodF5DFB945": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "DeploymentId": {
     "Ref": "dsexplorerDeployment796B9293c71784ee76e4e6b294080a02c9466b57"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "dsexplorerAccount272FA25F"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/DeploymentStage.prod/Resource"
   }
  },
  "dsexplorersegmentTree62E3684E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "dsexplorer45F728E1",
      "RootResourceId"
     ]
    },
    "PathPart": "segmentTree",
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/segmentTree/Resource"
   }
  },
  "dsexplorersegmentTreePOSTApiPermissioncdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTsegmentTree5535814E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "segmentTreeFunction007D582E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/",
       {
        "Ref": "dsexplorerDeploymentStageprodF5DFB945"
       },
       "/POST/segmentTree"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/segmentTree/POST/ApiPermission.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..segmentTree"
   }
  },
  "dsexplorersegmentTreePOSTApiPermissionTestcdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTsegmentTree13DDC4A2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "segmentTreeFunction007D582E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/test-invoke-stage/POST/segmentTree"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/segmentTree/POST/ApiPermission.Test.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..segmentTree"
   }
  },
  "dsexplorersegmentTreePOSTCFC39CA9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "dsexplorersegmentTree62E3684E"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "segmentTreeFunction007D582E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/segmentTree/POST/Resource"
   }
  },
  "dsexplorersegmentTreeOPTIONSA3C3E887": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "dsexplorersegmentTree62E3684E"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/segmentTree/OPTIONS/Resource"
   }
  },
  "dsexplorermedianTracker00B88DA5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "dsexplorer45F728E1",
      "RootResourceId"
     ]
    },
    "PathPart": "medianTracker",
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/Resource"
   }
  },
  "dsexplorermedianTrackerOPTIONS814DF954": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "dsexplorermedianTracker00B88DA5"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/OPTIONS/Resource"
   }
  },
  "dsexplorermedianTrackerPOSTApiPermissioncdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTmedianTracker97B15E2D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "twoHeapMedianAddValueFunction56FECB10",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/",
       {
        "Ref": "dsexplorerDeploymentStageprodF5DFB945"
       },
       "/POST/medianTracker"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/POST/ApiPermission.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..medianTracker"
   }
  },
  "dsexplorermedianTrackerPOSTApiPermissionTestcdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTmedianTracker386B8E6A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "twoHeapMedianAddValueFunction56FECB10",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/test-invoke-stage/POST/medianTracker"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/POST/ApiPermission.Test.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..medianTracker"
   }
  },
  "dsexplorermedianTrackerPOST6932612A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "dsexplorermedianTracker00B88DA5"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "twoHeapMedianAddValueFunction56FECB10",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/POST/Resource"
   }
  },
  "dsexplorermedianTrackerGETApiPermissioncdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0GETmedianTracker89536994": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "twoHeapMedianGetMedianFunction5902CC9A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/",
       {
        "Ref": "dsexplorerDeploymentStageprodF5DFB945"
       },
       "/GET/medianTracker"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/GET/ApiPermission.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.GET..medianTracker"
   }
  },
  "dsexplorermedianTrackerGETApiPermissionTestcdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0GETmedianTrackerBFC5DE4A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "twoHeapMedianGetMedianFunction5902CC9A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/test-invoke-stage/GET/medianTracker"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/GET/ApiPermission.Test.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.GET..medianTracker"
   }
  },
  "dsexplorermedianTrackerGET3A27654A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "dsexplorermedianTracker00B88DA5"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "twoHeapMedianGetMedianFunction5902CC9A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/medianTracker/GET/Resource"
   }
  },
  "dsexplorergMaps449AB82F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "dsexplorer45F728E1",
      "RootResourceId"
     ]
    },
    "PathPart": "gMaps",
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/Resource"
   }
  },
  "dsexplorergMapsPOSTApiPermissioncdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTgMapsCECB70E2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gMapsDataGeneratorFunctionAAFDDEC8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/",
       {
        "Ref": "dsexplorerDeploymentStageprodF5DFB945"
       },
       "/POST/gMaps"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/POST/ApiPermission.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..gMaps"
   }
  },
  "dsexplorergMapsPOSTApiPermissionTestcdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0POSTgMaps6753F200": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gMapsDataGeneratorFunctionAAFDDEC8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/test-invoke-stage/POST/gMaps"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/POST/ApiPermission.Test.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.POST..gMaps"
   }
  },
  "dsexplorergMapsPOST6766FA0E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "dsexplorergMaps449AB82F"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "gMapsDataGeneratorFunctionAAFDDEC8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/POST/Resource"
   }
  },
  "dsexplorergMapsOPTIONS1AACEF90": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "dsexplorergMaps449AB82F"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/OPTIONS/Resource"
   }
  },
  "dsexplorergMapssrcC50F70EF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "dsexplorergMaps449AB82F"
    },
    "PathPart": "{src}",
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/Resource"
   }
  },
  "dsexplorergMapssrcdest73447F59": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "dsexplorergMapssrcC50F70EF"
    },
    "PathPart": "{dest}",
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/{dest}/Resource"
   }
  },
  "dsexplorergMapssrcdestGETApiPermissioncdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0GETgMapssrcdestA70EF6AB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gMapsGetShortestPathF87DA254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/",
       {
        "Ref": "dsexplorerDeploymentStageprodF5DFB945"
       },
       "/GET/gMaps/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/{dest}/GET/ApiPermission.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.GET..gMaps.{src}.{dest}"
   }
  },
  "dsexplorergMapssrcdestGETApiPermissionTestcdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0GETgMapssrcdest8A8F0462": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gMapsGetShortestPathF87DA254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "dsexplorer45F728E1"
       },
       "/test-invoke-stage/GET/gMaps/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/{dest}/GET/ApiPermission.Test.cdkclouddsexplorerapigatewaylambdadsexplorer067A0FC0.GET..gMaps.{src}.{dest}"
   }
  },
  "dsexplorergMapssrcdestGET79121287": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "dsexplorergMapssrcdest73447F59"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "gMapsGetShortestPathF87DA254",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/{dest}/GET/Resource"
   }
  },
  "dsexplorergMapssrcdestOPTIONSFA61D73F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "dsexplorergMapssrcdest73447F59"
    },
    "RestApiId": {
     "Ref": "dsexplorer45F728E1"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/Default/gMaps/{src}/{dest}/OPTIONS/Resource"
   }
  },
  "dsexplorerdsExplorerUsagePlanA6AA7D29": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "dsexplorer45F728E1"
      },
      "Stage": {
       "Ref": "dsexplorerDeploymentStageprodF5DFB945"
      },
      "Throttle": {}
     }
    ],
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 10
    },
    "UsagePlanName": "freeTierPlan"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/ds-explorer/dsExplorerUsagePlan/Resource"
   }
  },
  "freeTier72956893": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "Name": "freeTier"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/freeTier/Resource"
   }
  },
  "UsagePlanKey": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "freeTier72956893"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "dsexplorerdsExplorerUsagePlanA6AA7D29"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/UsagePlanKey"
   }
  },
  "segmentTreeFunctionServiceRole03310493": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/segmentTreeFunction/ServiceRole/Resource"
   }
  },
  "segmentTreeFunctionServiceRoleDefaultPolicy8531C241": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeoMap5538752E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "segmentTreeFunctionServiceRoleDefaultPolicy8531C241",
    "Roles": [
     {
      "Ref": "segmentTreeFunctionServiceRole03310493"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/segmentTreeFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "segmentTreeFunction007D582E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar"
    },
    "Role": {
     "Fn::GetAtt": [
      "segmentTreeFunctionServiceRole03310493",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "GeoMap5538752E"
      },
      "PRIMARY_KEY": "point",
      "REDIS_ENDPOINT": {
       "Fn::ImportValue": "RedisEndpointExport"
      }
     }
    },
    "Handler": "cloud.ds.explorer.lambda.SegmentTree",
    "MemorySize": 512,
    "Runtime": "java11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputFnGetAttCloudDSExplorerVPC8CAE5230DefaultSecurityGroupA6840BD4"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet1Subnet666248F812DDAA75"
      },
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet2Subnet4D7F60362FF058FE"
      }
     ]
    }
   },
   "DependsOn": [
    "segmentTreeFunctionServiceRoleDefaultPolicy8531C241",
    "segmentTreeFunctionServiceRole03310493"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/segmentTreeFunction/Resource",
    "aws:asset:path": "asset.071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "twoHeapMedianAddValueFunctionServiceRoleFC0B61BA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/twoHeapMedianAddValueFunction/ServiceRole/Resource"
   }
  },
  "twoHeapMedianAddValueFunction56FECB10": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar"
    },
    "Role": {
     "Fn::GetAtt": [
      "twoHeapMedianAddValueFunctionServiceRoleFC0B61BA",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "GeoMap5538752E"
      },
      "PRIMARY_KEY": "point",
      "REDIS_ENDPOINT": {
       "Fn::ImportValue": "RedisEndpointExport"
      }
     }
    },
    "Handler": "cloud.ds.explorer.lambda.MedianTracker.ValuePostHandler",
    "MemorySize": 512,
    "Runtime": "java11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputFnGetAttCloudDSExplorerVPC8CAE5230DefaultSecurityGroupA6840BD4"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet1Subnet666248F812DDAA75"
      },
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet2Subnet4D7F60362FF058FE"
      }
     ]
    }
   },
   "DependsOn": [
    "twoHeapMedianAddValueFunctionServiceRoleFC0B61BA"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/twoHeapMedianAddValueFunction/Resource",
    "aws:asset:path": "asset.071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "twoHeapMedianGetMedianFunctionServiceRole5D47FDDE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/twoHeapMedianGetMedianFunction/ServiceRole/Resource"
   }
  },
  "twoHeapMedianGetMedianFunction5902CC9A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar"
    },
    "Role": {
     "Fn::GetAtt": [
      "twoHeapMedianGetMedianFunctionServiceRole5D47FDDE",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "GeoMap5538752E"
      },
      "PRIMARY_KEY": "point",
      "REDIS_ENDPOINT": {
       "Fn::ImportValue": "RedisEndpointExport"
      }
     }
    },
    "Handler": "cloud.ds.explorer.lambda.MedianTracker.ValueGetHandler",
    "MemorySize": 512,
    "Runtime": "java11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputFnGetAttCloudDSExplorerVPC8CAE5230DefaultSecurityGroupA6840BD4"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet1Subnet666248F812DDAA75"
      },
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet2Subnet4D7F60362FF058FE"
      }
     ]
    }
   },
   "DependsOn": [
    "twoHeapMedianGetMedianFunctionServiceRole5D47FDDE"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/twoHeapMedianGetMedianFunction/Resource",
    "aws:asset:path": "asset.071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "gMapsDataGeneratorFunctionServiceRoleABC75C5B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsDataGeneratorFunction/ServiceRole/Resource"
   }
  },
  "gMapsDataGeneratorFunctionServiceRoleDefaultPolicyE37B4B03": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeoMap5538752E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gMapsDataGeneratorFunctionServiceRoleDefaultPolicyE37B4B03",
    "Roles": [
     {
      "Ref": "gMapsDataGeneratorFunctionServiceRoleABC75C5B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsDataGeneratorFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "gMapsDataGeneratorFunctionAAFDDEC8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar"
    },
    "Role": {
     "Fn::GetAtt": [
      "gMapsDataGeneratorFunctionServiceRoleABC75C5B",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "GeoMap5538752E"
      },
      "PRIMARY_KEY": "point",
      "REDIS_ENDPOINT": {
       "Fn::ImportValue": "RedisEndpointExport"
      }
     }
    },
    "Handler": "cloud.ds.explorer.lambda.GMaps.GMapDataGenerator",
    "MemorySize": 512,
    "Runtime": "java11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputFnGetAttCloudDSExplorerVPC8CAE5230DefaultSecurityGroupA6840BD4"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet1Subnet666248F812DDAA75"
      },
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet2Subnet4D7F60362FF058FE"
      }
     ]
    }
   },
   "DependsOn": [
    "gMapsDataGeneratorFunctionServiceRoleDefaultPolicyE37B4B03",
    "gMapsDataGeneratorFunctionServiceRoleABC75C5B"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsDataGeneratorFunction/Resource",
    "aws:asset:path": "asset.071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "gMapsGetShortestPathServiceRole46E6B049": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsGetShortestPath/ServiceRole/Resource"
   }
  },
  "gMapsGetShortestPathServiceRoleDefaultPolicy6BC9D26B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeoMap5538752E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gMapsGetShortestPathServiceRoleDefaultPolicy6BC9D26B",
    "Roles": [
     {
      "Ref": "gMapsGetShortestPathServiceRole46E6B049"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsGetShortestPath/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "gMapsGetShortestPathF87DA254": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar"
    },
    "Role": {
     "Fn::GetAtt": [
      "gMapsGetShortestPathServiceRole46E6B049",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "GeoMap5538752E"
      },
      "PRIMARY_KEY": "point",
      "REDIS_ENDPOINT": {
       "Fn::ImportValue": "RedisEndpointExport"
      }
     }
    },
    "Handler": "cloud.ds.explorer.lambda.GMaps.FindShortestPath",
    "MemorySize": 512,
    "Runtime": "java11",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputFnGetAttCloudDSExplorerVPC8CAE5230DefaultSecurityGroupA6840BD4"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet1Subnet666248F812DDAA75"
      },
      {
       "Fn::ImportValue": "cdk-cloud-ds-explorer-shared-resources:ExportsOutputRefCloudDSExplorerVPCPrivateSubnet2Subnet4D7F60362FF058FE"
      }
     ]
    }
   },
   "DependsOn": [
    "gMapsGetShortestPathServiceRoleDefaultPolicy6BC9D26B",
    "gMapsGetShortestPathServiceRole46E6B049"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/gMapsGetShortestPath/Resource",
    "aws:asset:path": "asset.071b79ba74231d33cd0b5f069a166d057a665800eb7b80124ea4e3f715318620.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQy07DMBBFv6V715R2Adu0iAUIURVYVxPbDUP8iGKbKory74zt0sdqzr1jj+d6yR9WfDGDo58L2c411nz8CCBaRtZ+lIMF4ySZn1BrxTYHm2Fi0GEDQR1h4ONO+VB1mLpXWAnhog3sSXXaDUYRknul6J0mjyxAV13shVqDv4jTzMJvKnw7mawTfXm6uNVgk3cRtMCrGvIOZzp3SU8MwdDariTKdes0inyy0MQ0mFoCH5OleoPeo7PsOVoREpD9zxPzqz14r4LnVSqk+TqKVoUUZrpJ8x5DFwPL51JwtM1NSOKNsxLL4Bf4hbv7R77gy9mPR5z39KVoFN+V+gcXTfgSwAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "cdk-cloud-ds-explorer-api-gateway-lambda/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "dsexplorerEndpointB31DEC7F": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "dsexplorer45F728E1"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "dsexplorerDeploymentStageprodF5DFB945"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}